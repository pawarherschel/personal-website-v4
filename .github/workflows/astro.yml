# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy Astro site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  # BUILD_PATH: subfolder

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
            echo "lockfile=pnpm-lock.yaml" >> $GITHUB_OUTPUT
            exit 0
      # - name: Setup pnpm
      #   id: setup-pnpm
      #   uses: pnpm/action-setup@v3.0.0
      #   with:
      #     version: 8.6.12
      #     # Where to store pnpm files
      #     # dest: # optional, default is ~/setup-pnpm
      #     # When set to true, @pnpm/exe, which is a Node.js bundled package, will be installed, enabling using pnpm without Node.js.
      #     standalone: true
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Astro Deploy
        # You may pin to the exact commit or the version.
        # uses: withastro/action@acfe56dffc635abfb9506c77d51ce097030360d1
        uses: withastro/action@v2.0.0
        with:
          # You may specify your preferred package manager (one of `npm | yarn | pnpm | bun` and an optional `@<version>` tag). Otherwise, the package manager will be automatically detected.
          package-manager: pnpm@8.6.12
      # - name: Build with Astro
      #   run: |
      #     ${{ steps.detect-package-manager.outputs.runner }} astro build \
      #       --site "${{ steps.pages.outputs.origin }}" \
      #       --base "${{ steps.pages.outputs.base_path }}"
      #   working-directory: ${{ env.BUILD_PATH }}
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ${{ env.BUILD_PATH }}/dist
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: Deploy
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
